# PowerShell-—Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–ø–∏—Å–∏ CSR –æ—Ç iDRAC8 –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
# –¢—Ä–µ–±—É–µ—Ç: —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π OpenSSL –¥–æ—Å—Ç—É–ø–µ–Ω –≤ PATH

$caDir = "pki/ca"
$signedDir = "signed"
$null = New-Item -ItemType Directory -Path $caDir -Force
$null = New-Item -ItemType Directory -Path $signedDir -Force

$caKey = $null
$caCert = $null

# –ü–æ–∏—Å–∫ –∏–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è CA
$existingCa = Get-ChildItem -Path $caDir -Filter "*.crt" | Where-Object { Test-Path (Join-Path $caDir ($_.BaseName + ".key")) }

if ($existingCa.Count -gt 0) {
    $caCert = $existingCa[0].FullName
    $caKey = Join-Path $caDir ($existingCa[0].BaseName + ".key")
    Write-Host "üîç –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π CA: $caCert"
} else {
    Write-Host "‚ö†Ô∏è  CA –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ '$caDir'."
    $caName = Read-Host "–í–≤–µ–¥–∏—Ç–µ –∏–º—è –¥–ª—è –Ω–æ–≤–æ–≥–æ CA (–Ω–∞–ø—Ä–∏–º–µ—Ä, my-ca)"
    
    $caKey = Join-Path $caDir "$caName.key"
    $caCert = Join-Path $caDir "$caName.crt"
    $caPfx  = Join-Path $caDir "$caName.pfx"

    & openssl genrsa -out $caKey 2048
    & openssl req -x509 -new -nodes -key $caKey -sha256 -days 1825 `
        -subj "/C=RU/ST=Moscow/L=Moscow/O=MyOrg/OU=IT/CN=$caName Root CA" -out $caCert

    & openssl pkcs12 -export -out $caPfx -inkey $caKey -in $caCert -passout pass:

    Write-Host "‚úÖ –ù–æ–≤—ã–π CA —Å–æ–∑–¥–∞–Ω: $caCert / $caKey"
    Write-Host "üîê CA —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ PKCS#12: $caPfx"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö CSR
Get-ChildItem -Filter "csr*.txt" | ForEach-Object {
    $csrFile = $_.FullName
    Write-Host "`nüîß –û–±—Ä–∞–±–æ—Ç–∫–∞ CSR: $csrFile"

    $mainSan = Read-Host "–í–≤–µ–¥–∏—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π hostname (–Ω–∞–ø—Ä–∏–º–µ—Ä, idrac8)"
    $domain  = Read-Host "–í–≤–µ–¥–∏—Ç–µ –¥–æ–º–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, example.local)"
    $ip      = Read-Host "–í–≤–µ–¥–∏—Ç–µ IP –∞–¥—Ä–µ—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, 192.168.1.100)"
    $days    = Read-Host "–í–≤–µ–¥–∏—Ç–µ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (–≤ –¥–Ω—è—Ö, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1825)"
    if ([string]::IsNullOrWhiteSpace($days)) { $days = 1825 }

    $sanList = @("DNS:$mainSan", "DNS:$mainSan.$domain")
    if (-not [string]::IsNullOrWhiteSpace($ip)) {
        $sanList += "IP:$ip"
    }
    $sanCombined = $sanList -join ", "

    $name = $mainSan
    $outDir = Join-Path $signedDir $name
    $null = New-Item -ItemType Directory -Path $outDir -Force

    $extFile = Join-Path $outDir "extfile.cnf"
    "subjectAltName=$sanCombined" | Out-File -Encoding ascii $extFile

    $crtPath = Join-Path $outDir "$name.crt"
    $pemPath = Join-Path $outDir "$name.full.pem"
    $pfxPath = Join-Path $outDir "$name.pfx"

    # –ü–æ–¥–ø–∏—Å—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    & openssl x509 -req -in $csrFile -CA $caCert -CAkey $caKey `
        -CAcreateserial -out $crtPath -days $days -extfile $extFile

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ PEM
    Get-Content $crtPath, $caCert | Set-Content -Encoding ascii $pemPath

    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ PFX
    & openssl pkcs12 -export -inkey $caKey -in $crtPath -certfile $caCert `
        -out $pfxPath -passout pass:

    Write-Host "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω: $crtPath"
    Write-Host "üì¶ –ü–æ–ª–Ω—ã–π PEM: $pemPath"
    Write-Host "üîê –ò—Ç–æ–≥–æ–≤—ã–π PFX: $pfxPath"

    Remove-Item $csrFile
    Write-Host "üóëÔ∏è –£–¥–∞–ª—ë–Ω CSR: $csrFile"
}

Write-Host "`nüéâ –í—Å–µ CSR –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã. –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –ø–∞–ø–∫–µ '$signedDir/'"
